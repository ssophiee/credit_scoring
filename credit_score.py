# -*- coding: utf-8 -*-
"""credit_score.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1XT91RqI9HeYHI2VFeEIDzdTFAi4yKJOf
"""

def nan_ratio(df):
    ''' Returns the NaN ratio in the dataset
  
    Parameters
    ----------
    df: dataframe
        dataset 
    
    '''
    for column in df.columns:
        check = df[column].isna().sum()
        if check > 0:
            print(column, f'NaN proportion: {round(check / len(df), 2)}')

def del_outliers(X):
    ''' Returns the shape of updated X dataset (without outliers)
  
    Parameters
    ----------
    X: dataframe
        dataset with parameters
        
    '''

    needed = ['credit_card_utilization', 'overdue_30_59_days',  'family_members', 'credits_loans', 'monthly_income', 'debt_to_income']

    for column in needed:

        if column in ['credit_card_utilization', 'overdue_30_59_days']:

                quantile1 = 0.05
                quantile3 = 0.95 

        if column in ['family_members', 'credits_loans', 'monthly_income', 'debt_to_income']:
            
                quantile1 = 0.1
                quantile3 = 0.9
            
        q1 = X[column].quantile(quantile1)
        q3 = X[column].quantile(quantile3)

        IQR = q3 - q1

        c = X.loc[(X[column] < q1 - 3 * IQR) | (X[column] > 3 * IQR + q3)].index
        X.drop(labels = c, inplace = True)
        y.drop(labels = c, inplace = True)

    return X.shape

def set_threshold(threshold, y_pred_proba):
    ''' Returns y identified as 1/0 using certain threshold
  
    Parameters
    ----------
    threshold: float/int
        threshold that is used to identify an object with a probability higher than the threshold as 1
    y_pred_proba: list
        list with probability for each object
    
    '''
    y_w_threshold = []
    for i in y_pred_proba:
        if i > threshold:
            y_w_threshold.append(1)
        else:
            y_w_threshold.append(0)
    return y_w_threshold